{"version":3,"sources":["Components/ReproductorController/ReproductorController.module.sass","App.module.sass","Components/ArrayVisualizerElement/ArrayVisualizerElement.module.sass","Components/ArraySortingController/ArraySortingController.module.sass","Components/ArrayVisualizer/ArrayVisualizer.module.sass","Components/ArrayForm/ArrayForm.module.sass","Components/ArrayVisualizerElement/ArrayVisualizerElement.js","Components/ArrayVisualizer/ArrayVisualizer.js","Utilities/ArrayUtil/ArrayUtil.js","Components/ArraySortingController/ArraySortingController.js","Utilities/SortingUtil/MergeSort.js","Utilities/SortingUtil/QuickSort.js","Utilities/SortingUtil/BubbleSort.js","Components/ArrayForm/ArrayForm.js","Components/ReproductorController/ReproductorController.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ArrayVisualizerElement","isActive","height","width","className","Styles","style","ArrayVisualizer","arrayElements","array","lenght","range","map","e","i","value","max","key","createElements","startingArray","arrayMove","oldIndex","newIndex","newArray","slice","length","k","push","undefined","splice","generateRampArray","step","min","collector","Array","from","data","j","Math","floor","random","arrayShuffle","sortingAlgorithms","MERGE_SORT","sort","left","right","steps","middle","parseInt","leftArray","concat","rightArray","mergedInfo","console","log","elements","index","merge","QUICK_SORT","pivotIndex","pivotValue","BUBBLE_SORT","temp","ArraySortingController","forwardRef","props","ref","isRamp","sortingAlgorithm","useState","setArray","setSteps","currentStepIndex","setCurrentStepIndex","previousStepIndex","setPreviousStepIndex","isForward","isPlay","flags","setFlags","refs","useRef","current","useEffect","generateArray","setUp","setInterval","update","useImperativeHandle","handleNextStep","handlePreviousStep","handlePlayForward","handlePlayBackward","handlePause","shuffleArray","previousStepI","forEach","element","deactivate","animateSteps","nextStep","implementStep","previousStep","reverse","revertStep","randomArray","generateRandomArray","sortedArray","parseFloat","ArrayForm","formData","minRange","maxRange","speed","handleInputChange","handleShuffle","Container","Form","Group","Label","Control","type","name","placeholder","onChange","Check","label","checked","Boolean","as","custom","Button","onClick","ReproductorController","handlePrevious","handleNext","Provider","color","App","arrayController","arrayFormData","setArrayFormData","event","target","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.367ef8ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"reproductor-controller\":\"ReproductorController_reproductor-controller__3EC_F\",\"icon-container\":\"ReproductorController_icon-container__3m1NV\",\"flip-horizontal\":\"ReproductorController_flip-horizontal__2vtl8\",\"icon\":\"ReproductorController_icon__2oFGn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1ZftT\",\"array-form--container\":\"App_array-form--container__246FG\",\"array-reproductor\":\"App_array-reproductor__2vNLD\",\"array-sorting-controller--container\":\"App_array-sorting-controller--container__FEJgl\",\"reproductor-controller--container\":\"App_reproductor-controller--container__1jiFS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"array-visualizer__element\":\"ArrayVisualizerElement_array-visualizer__element__19HqM\",\"array-visualizer__element--active\":\"ArrayVisualizerElement_array-visualizer__element--active__1gJYq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"array-sorting-controller\":\"ArraySortingController_array-sorting-controller__1__KX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"array-visualizer\":\"ArrayVisualizer_array-visualizer__3zDru\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form--array\":\"ArrayForm_form--array__hEDjY\"};","import React from \"react\";\nimport Styles from \"./ArrayVisualizerElement.module.sass\";\n\nfunction ArrayVisualizerElement({ isActive, height, width }) {\n  return (\n    <div\n      className={`${Styles[\"array-visualizer__element\"]} ${\n        isActive && Styles[\"array-visualizer__element--active\"]\n      }`}\n      style={{ height: `${height}%`, width: `${width}%` }}\n    >\n      &nbsp;\n    </div>\n  );\n}\n\nexport default ArrayVisualizerElement;\n","import React from \"react\";\nimport Styles from \"./ArrayVisualizer.module.sass\";\nimport ArrayVisualizerElement from \"../ArrayVisualizerElement/ArrayVisualizerElement\";\n\nconst createElements = (array, lenght, range) => {\n    const arrayElements = array.map((e, i) => {\n        return (\n            <ArrayVisualizerElement\n                isActive={e.isActive}\n                height={(e.value / range.max) * 100}\n                width={(1 / lenght) * 100}\n                key={i}\n            />\n        );\n    });\n    return arrayElements;\n};\n\nfunction ArrayVisualizer({ startingArray, lenght, range }) {\n    const arrayElements = createElements(startingArray, lenght, range);\n    return <div className={Styles[\"array-visualizer\"]}>{arrayElements}</div>;\n}\n\nexport default ArrayVisualizer;\n","export function arrayMove(array, oldIndex, newIndex) {\n    var newArray = array.slice(0);      // prevents pass by reference\n    if (newIndex >= newArray.length) {\n        var k = newIndex - newArray.length + 1;\n        while (k--) {\n            newArray.push(undefined);\n        }\n    }\n    newArray.splice(newIndex, 0, newArray.splice(oldIndex, 1)[0]);\n    return newArray;\n};\n\nexport function arrayShuffle(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n};","import React, {\n    useState,\n    useEffect,\n    forwardRef,\n    useImperativeHandle,\n    useRef,\n} from \"react\";\nimport Styles from \"./ArraySortingController.module.sass\";\nimport ArrayVisualizer from \"../ArrayVisualizer/ArrayVisualizer\";\nimport bubbleSort from \"../../Utilities/SortingUtil/BubbleSort\";\nimport mergeSort from \"../../Utilities/SortingUtil/MergeSort\";\nimport quickSort from \"../../Utilities/SortingUtil/QuickSort\";\nimport { arrayMove, arrayShuffle } from \"../../Utilities/ArrayUtil/ArrayUtil\";\n\nconst generateRandomArray = (length, range) => {\n    return Array.from(Array(length)).map(() => {\n        return {\n            value: Math.random() * (range.max - range.min) + range.min,\n            isActive: false,\n        };\n    });\n};\n\nconst generateRampArray = (length, range) => {\n    const step = (range.max - range.min) / length;\n    let collector = range.min;\n    let array = Array.from(Array(length)).map((e) => {\n        const data = {\n            value: collector,\n            isActive: false,\n        };\n        collector += step;\n        return data;\n    });\n\n    array = arrayShuffle(array);\n\n    return array;\n};\n\nconst implementStep = ({ elements }, array) => {\n    var newArray = array.slice(0);\n    elements.forEach((element) => {\n        newArray[element.index].isActive = true;\n        newArray = arrayMove(newArray, element.index, element.newIndex);\n    });\n\n    return newArray;\n};\n\nconst revertStep = ({ elements }, array) => {\n    var newArray = array.slice(0);\n    elements.reverse().forEach((element) => {\n        newArray[element.newIndex].isActive = true;\n        newArray = arrayMove(newArray, element.newIndex, element.index);\n    });\n\n    return newArray;\n};\n\nconst deactivate = ({ elements }, array) => {\n    var newArray = array.slice(0);\n    elements.forEach((element) => {\n        newArray[element.newIndex].isActive = false;\n        newArray[element.index].isActive = false;\n    });\n\n    return newArray;\n};\n\nconst sortingAlgorithms = {\n    MERGE_SORT: mergeSort,\n    QUICK_SORT: quickSort,\n    BUBBLE_SORT: bubbleSort,\n};\n\nconst ArraySortingController = forwardRef((props, ref) => {\n    const { length, range, isRamp, sortingAlgorithm } = props;\n    const [array, setArray] = useState([]);\n    const [steps, setSteps] = useState([]);\n    // const [isPlay, setIsPlay] = useState(false);\n    const [currentStepIndex, setCurrentStepIndex] = useState(0);\n    const [previousStepIndex, setPreviousStepIndex] = useState(0);\n    // const [isForward, setIsForward] = useState(true);\n\n    const [flags, setFlags] = useState({\n        isForward: true,\n        isPlay: false,\n    });\n    const refs = useRef({\n        flags,\n        array,\n        steps,\n        currentStepIndex,\n        previousStepIndex,\n    });\n    refs.current.flags = flags;\n    refs.current.array = array;\n    refs.current.steps = steps;\n    refs.current.currentStepIndex = currentStepIndex;\n    refs.current.previousStepIndex = previousStepIndex;\n    // const [currentStep, setCurrentStep] = useState({ elements: [], isChange: false });\n    // const [finalArray, setFinalArray] = useState([]);\n\n    useEffect(() => {\n        generateArray();\n    }, [props]);\n\n    useEffect(() => {\n        setUp();\n        setInterval(() => update(), 10);\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n        handleNextStep() {\n            handleNextStep();\n        },\n        handlePreviousStep() {\n            handlePreviousStep();\n        },\n        handlePlayForward() {\n            handlePlayForward();\n        },\n        handlePlayBackward() {\n            handlePlayBackward();\n        },\n        handlePause() {\n            handlePause();\n        },\n        generateArray() {\n            generateArray();\n        },\n        shuffleArray() {\n            shuffleArray();\n        },\n    }));\n\n    const setUp = () => {\n        generateArray();\n    };\n\n    const update = () => {\n        const previousStepI = refs.current.previousStepIndex;\n        if (refs.current.currentStepIndex !== previousStepI) {\n            const newArray = deactivate(refs.current.steps[previousStepI], refs.current.array);\n            setArray(newArray);\n            setPreviousStepIndex(refs.current.currentStepIndex);\n        }\n\n        if (refs.current.flags.isPlay) {\n            console.log(\"play\");\n            animateSteps();\n        }\n    };\n\n    const handlePlayForward = () => {\n        setFlags({\n            ...refs.current.flags,\n            isPlay: true,\n            isForward: true,\n        });\n        // setIsPlay(true);\n        // setIsForward(true);\n        // setTimeout(() => animateSteps(), 10);\n    };\n\n    const handlePlayBackward = () => {\n        setFlags({\n            ...refs.current.flags,\n            isPlay: true,\n            isForward: false,\n        });\n        // setIsPlay(true);\n        // setIsForward(false);\n        // setTimeout(() => animateSteps(), 10);\n    };\n\n    const handlePause = () => {\n        setFlags({\n            ...refs.current.flags,\n            isPlay: false,\n        });\n        // setIsPlay(false);\n    };\n\n    const animateSteps = () => {\n        // setIsForward(isForwardTemp);\n        console.log(\"forward\", refs.current.flags.isForward);\n        refs.current.flags.isForward ? handleNextStep() : handlePreviousStep();\n    };\n\n    const handleNextStep = () => {\n        const nextStep = refs.current.flags.isForward\n            ? refs.current.currentStepIndex\n            : refs.current.currentStepIndex + 1;\n        // const nextStep = refs.current.currentStepIndex\n        if (nextStep < refs.current.steps.length) {\n            setFlags({\n                ...refs.current.flags,\n                isForward: true,\n            });\n\n            // setIsForward(true);\n\n            const step = refs.current.steps[nextStep];\n            const newArray = implementStep(step, refs.current.array);\n            setArray(newArray);\n            setPreviousStepIndex(nextStep);\n            setCurrentStepIndex(nextStep + 1);\n            // newArray = deactivate(step, newArray);\n            // setArray(newArray);\n        } else {\n            setFlags({\n                ...refs.current.flags,\n                isPlay: false,\n            });\n        }\n    };\n\n    const handlePreviousStep = () => {\n        const previousStep = refs.current.flags.isForward\n            ? refs.current.currentStepIndex - 1\n            : refs.current.currentStepIndex;\n        // const previousStep = refs.current.currentStepIndex;\n        if (previousStep >= 0) {\n            setFlags({\n                ...refs.current.flags,\n\n                isForward: false,\n            });\n\n            // setIsForward(false);\n\n            const step = refs.current.steps[previousStep];\n            const newArray = revertStep(step, refs.current.array);\n            setArray(newArray);\n            setPreviousStepIndex(previousStep);\n            setCurrentStepIndex(previousStep - 1);\n\n        } else {\n            setFlags({\n                ...refs.current.flags,\n                isPlay: false,\n            });\n            // setIsPlay(false);\n        }\n    };\n\n    const generateArray = () => {\n        setFlags({\n            ...refs.current.flags,\n\n            isForward: true,\n        });\n\n        // setIsForward(true);\n        setCurrentStepIndex(0);\n\n        console.log(\"updating\");\n        const randomArray = isRamp\n            ? generateRampArray(length, range)\n            : generateRandomArray(length, range);\n        setArray(randomArray);\n\n        const sortedArray = sortingAlgorithms[sortingAlgorithm](\n            randomArray,\n            0.0,\n            parseFloat(randomArray.length - 1)\n        );\n\n        setSteps(sortedArray.steps);\n    };\n\n    const shuffleArray = () => {\n        generateArray();\n    };\n\n    return (\n        <div className={Styles[\"array-sorting-controller\"]}>\n            {/* <div onClick={() => handleStartAnimation()}>start</div> */}\n            <ArrayVisualizer startingArray={array} range={range} lenght={length} />\n        </div>\n    );\n});\n\nexport default ArraySortingController;\n","import { arrayMove } from '../ArrayUtil/ArrayUtil';\n\nexport default function sort(array, left, right) {\n    var newArray = array.slice(0);      // prevents pass by reference\n    var steps = [];\n\n    if (left < right) {\n        const middle = (parseInt((right - left) / 2) + left);\n\n        const leftArray = sort(newArray, left, middle);\n        newArray = leftArray.newArray;\n        steps = steps.concat(leftArray.steps);\n        const rightArray = sort(newArray, middle + 1, right);\n        newArray = rightArray.newArray;\n        steps = steps.concat(rightArray.steps);\n        const mergedInfo = merge(newArray, left, middle, right);\n        newArray = mergedInfo.newArray\n        steps = steps.concat(mergedInfo.steps);\n    }\n    return { newArray, steps };\n}\n\nfunction merge(array, left, middle, right) {\n    var newArray = array.slice(0);      // prevents pass by reference\n    var steps = [];\n\n    var i = left;\n    var j = middle + 1;\n    if (left === 0 && middle === 4 && right === 9) {\n        console.log();\n    }\n    while (i <= middle && j <= right) {\n        var step = {\n            elements: []\n        }\n        if (newArray[j].value < newArray[i].value) {\n            step.elements.push({ index: j, newIndex: i });\n            step.elements.push({ index: i+1, newIndex: i+1 });\n            newArray = arrayMove(newArray, j, i);\n            j++\n            middle++;\n        }\n        else\n        {\n            step.elements.push({ index: i, newIndex: i });\n            step.elements.push({ index: j, newIndex: j });\n        }\n        i++;\n        steps.push(step);\n    }\n    return { newArray, steps };\n}","import { arrayMove } from \"../ArrayUtil/ArrayUtil\";\n\nexport default function sort(array, left, right) {\n    var newArray = array.slice(0); // prevents pass by reference\n    var steps = [];\n    if (left < right) {\n        var pivotIndex = right;\n        var pivotValue = (array[pivotIndex].value);\n\n        var j = left;\n        while (j < pivotIndex) {\n            var step = {\n                elements: []\n            }\n            if ((newArray[j].value) > (pivotValue)) {\n                newArray = arrayMove(newArray, j, right);\n                pivotIndex--;\n                step.elements.push({ index: j, newIndex: right });\n                step.elements.push({ index: pivotIndex, newIndex: pivotIndex });\n                steps.push(step);\n                continue;\n            }\n            step.elements.push({ index: j, newIndex: j });\n            step.elements.push({ index: pivotIndex, newIndex: pivotIndex });\n            steps.push(step);\n\n            j++;            \n        }\n\n        const leftArray = sort(newArray, left, pivotIndex - 1);\n        newArray = leftArray.newArray;\n        steps = steps.concat(leftArray.steps);\n        const rightArray = sort(newArray, pivotIndex + 1, right);\n        newArray = rightArray.newArray;\n        steps = steps.concat(rightArray.steps);\n    }\n    return { newArray, steps };\n}\n","export default function (array, left, right) {\n    var newArray = array.slice(0);      // prevents pass by reference\n    var steps = [];\n    for (var i = left; i < right; i++) {\n        for (var j = left; j < right - i; j++) {\n            var step = {\n                elements: []\n            }\n\n            if (newArray[j].value > newArray[j + 1].value) {\n                step.elements.push({ index: j, newIndex: j + 1 });\n                step.elements.push({ index: j + 1, newIndex: j + 1 });\n                var temp = newArray[j];\n                newArray[j] = newArray[j + 1];\n                newArray[j + 1] = temp;\n            }\n            else {\n                step.elements.push({ index: j, newIndex: j });\n                step.elements.push({ index: j + 1, newIndex: j + 1 });\n            }\n\n            steps.push(step);\n        }\n    }\n    return { newArray, steps };\n}","import React from \"react\";\nimport Styles from \"./ArrayForm.module.sass\";\nimport { Form, Button, Container } from \"react-bootstrap\";\n\nfunction ArrayForm({\n    formData: { length, isRamp, minRange, maxRange, sortingAlgorithm, speed },\n    handleInputChange,\n    handleShuffle,\n}) {\n    return (\n        <div className={`d-flex flex-row text-white ${Styles[\"form--array\"]}`}>\n            <Container className=\"d-flex flex-row col-md-12 p-2 m-0 justify-content-around align-items-center\">\n                <Form className=\"d-flex flex-row flex-wrap col-md-12 p-0 m-0 align-items-center\">\n                    <Form.Group className=\"d-flex flex-row flex-wrap col-md-6 p-0 m-0 my-2 justify-content-between align-items-center\">\n                        <Form.Group className=\"d-flex flex-column col-md-4 p-1 m-0 align-items-start justify-content-center\">\n                            <Form.Label className=\"small\">Speed</Form.Label>\n                            <Form.Control\n                                type=\"number\"\n                                name=\"length\"\n                                placeholder=\"Length\"\n                                value={length}\n                                onChange={handleInputChange}\n                            />\n                        </Form.Group>\n                        <Form.Group className=\"col-md-5 p-2 m-0 d-flex flex-column align-items-start justify-content-start\">\n                            <Form.Label className=\"small\">Range</Form.Label>\n                            <Form.Group className=\"col-md-12 p-0 m-0 d-flex flex-row align-items-center\">\n                                <Form.Control\n                                    className=\"col-md-6\"\n                                    type=\"number\"\n                                    name=\"minRange\"\n                                    placeholder=\"Min\"\n                                    value={minRange}\n                                    onChange={handleInputChange}\n                                />\n                                <Form.Label className=\"p-1 m-0 col-md-0\">-</Form.Label>\n                                <Form.Control\n                                    className=\"col-md-6\"\n                                    type=\"number\"\n                                    name=\"maxRange\"\n                                    placeholder=\"Max\"\n                                    value={maxRange}\n                                    onChange={handleInputChange}\n                                />\n                            </Form.Group>\n                        </Form.Group>\n                        <Form.Group className=\"d-flex col-md-3 p-1 m-0 align-items-center justify-content-center\">\n                            <Form.Check\n                                type=\"checkbox\"\n                                label=\"Ramp\"\n                                name=\"isRamp\"\n                                checked={Boolean(isRamp)}\n                                onChange={handleInputChange}\n                            />\n                        </Form.Group>\n                    </Form.Group>\n                    <Form.Group className=\"d-flex flex-row col-md-5 p-0 m-0 my-2 justify-content-between align-items-center\">\n                        <Form.Control\n                            className=\"col-md-6\"\n                            as=\"select\"\n                            custom\n                            name=\"sortingAlgorithm\"\n                            value={sortingAlgorithm}\n                            onChange={handleInputChange}\n                        >\n                            <option value=\"BUBBLE_SORT\">Bubble sort</option>\n                            <option value=\"MERGE_SORT\">Merge sort</option>\n                            <option value=\"QUICK_SORT\">Quick sort</option>\n                        </Form.Control>\n                        <Form.Group className=\"col-md-6 m-0 d-flex flex-column align-items-start\">\n                            <Form.Label className=\"small\">Speed</Form.Label>\n                            <Form.Control\n                                type=\"range\"\n                                name=\"speed\"\n                                value={speed}\n                                onChange={handleInputChange}\n                            />\n                        </Form.Group>\n                    </Form.Group>\n                    <Button className=\"col-md-1 text-center p-1\" onClick={handleShuffle}>Shuffle</Button>\n                </Form>\n            </Container>\n        </div>\n    );\n}\n\nexport default ArrayForm;\n","import React from \"react\";\nimport Styles from './ReproductorController.module.sass';\nimport { IconContext } from 'react-icons';\nimport { BiPauseCircle, BiFastForward, BiPlay } from 'react-icons/bi';\n\nfunction ReproductorController({\n    handlePrevious,\n    handlePlayBackward,\n    handlePause,\n    handlePlayForward,\n    handleNext,\n}) {\n    return (\n        <div className={Styles[\"reproductor-controller\"]}>\n            <div className={`${Styles[\"flip-horizontal\"]} ${Styles[\"icon-container\"]}`} onClick={handlePrevious}>\n                <IconContext.Provider value={{ color: \"white\", className: Styles[\"icon\"] }}>\n                    <BiFastForward />\n                </IconContext.Provider>\n            </div>\n            <div className={`${Styles[\"flip-horizontal\"]} ${Styles[\"icon-container\"]}`} onClick={handlePlayBackward}>\n                <IconContext.Provider value={{ color: \"white\", className: Styles[\"icon\"] }}>\n                    <BiPlay />\n                </IconContext.Provider>\n            </div>\n            <div className={Styles[\"icon-container\"]} onClick={handlePause}>\n                <IconContext.Provider value={{ color: \"white\", className: Styles[\"icon\"] }}>\n                    <BiPauseCircle />\n                </IconContext.Provider>\n            </div>\n            <div className={Styles[\"icon-container\"]} onClick={handlePlayForward}>\n                <IconContext.Provider value={{ color: \"white\", className: Styles[\"icon\"] }}>\n                    <BiPlay />\n                </IconContext.Provider>\n            </div>\n            <div className={Styles[\"icon-container\"]} onClick={handleNext}>\n                <IconContext.Provider value={{ color: \"white\", className: Styles[\"icon\"] }}>\n                    <BiFastForward />\n                </IconContext.Provider>\n            </div>\n        </div>\n    );\n}\n\nexport default ReproductorController;\n","import React, { useState, useRef } from \"react\";\nimport Styles from './App.module.sass';\nimport ArraySortingController from \"./Components/ArraySortingController/ArraySortingController\";\nimport ArrayForm from \"./Components/ArrayForm/ArrayForm\";\nimport ReproductorController from './Components/ReproductorController/ReproductorController';\n\nconst sortingAlgorithms = {\n  MERGE_SORT: \"MERGE_SORT\",\n  QUICK_SORT: \"QUICK_SORT\",\n  BUBBLE_SORT: \"BUBBLE_SORT\",\n};\n\nfunction App() {\n  const arrayController = useRef(null);\n  const [arrayFormData, setArrayFormData] = useState({\n    length: 100,\n    isRamp: true,\n    minRange: 1,\n    maxRange: 10,\n    sortingAlgorithm: sortingAlgorithms.MERGE_SORT,\n    speed: 0,\n  });\n\n  const handleInputChange = (event) => {\n    arrayController.current.handlePause();\n    const value = (event.target.name === \"isRamp\") ? event.target.checked : event.target.value;\n    setArrayFormData({\n      ...arrayFormData,\n      [event.target.name]: value,\n    });\n  };\n\n  const handleShuffle = (event) => {\n    arrayController.current.handlePause();\n    arrayController.current.shuffleArray();\n  };\n\n  const handlePrevious = () => {\n    arrayController.current.handlePause();\n    arrayController.current.handlePreviousStep();\n  };\n\n  const handlePlayBackward = () => {\n    arrayController.current.handlePlayBackward();\n  };\n\n  const handlePause = () => {\n    arrayController.current.handlePause();\n  };\n\n  const handlePlayForward = () => {\n    arrayController.current.handlePlayForward();\n  };\n\n  const handleNext = () => {\n    arrayController.current.handlePause();\n    arrayController.current.handleNextStep();\n  };\n\n  return (\n    <div className={Styles[\"app\"]}>\n      <div className={Styles[\"array-form--container\"]}>\n        <ArrayForm\n          formData={arrayFormData}\n          handleInputChange={handleInputChange}\n          handleShuffle={handleShuffle}\n        />\n      </div>\n      <div className={Styles[\"array-reproductor\"]}>\n        <div className={Styles[\"array-sorting-controller--container\"]}>\n          <ArraySortingController\n            ref={arrayController}\n            length={parseInt(arrayFormData.length)}\n            range={{ min: parseInt(arrayFormData.minRange), max: parseInt(arrayFormData.maxRange) }}\n            isRamp={arrayFormData.isRamp}\n            sortingAlgorithm={arrayFormData.sortingAlgorithm}\n          />\n        </div>\n        <div className={Styles[\"reproductor-controller--container\"]}>\n          <ReproductorController\n            handlePrevious={handlePrevious}\n            handlePlayBackward={handlePlayBackward}\n            handlePause={handlePause}\n            handlePlayForward={handlePlayForward}\n            handleNext={handleNext}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}