{"version":3,"sources":["Components/ArrayVisualizerElement/ArrayVisualizerElement.module.sass","Components/ArraySortingController/ArraySortingController.module.sass","Components/ArrayVisualizer/ArrayVisualizer.module.sass","logo.svg","Components/ArrayVisualizerElement/ArrayVisualizerElement.js","Components/ArrayVisualizer/ArrayVisualizer.js","Utilities/ArrayUtil/ArrayUtil.js","Utilities/SortingUtil/MergeSort.js","Components/ArraySortingController/ArraySortingController.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ArrayVisualizerElement","isActive","height","width","className","Styles","style","ArrayVisualizer","arrayElements","array","lenght","range","map","e","i","value","max","key","createElements","startingArray","arrayMove","oldIndex","newIndex","newArray","slice","length","k","push","undefined","splice","sort","left","right","steps","middle","parseInt","leftArray","concat","rightArray","mergedInfo","j","console","log","step","elements","index","merge","nextStep","forEach","element","deactivate","delay","ms","Promise","res","setTimeout","ArraySortingController","useState","setArray","setSteps","isChange","setCurrentStep","setFinalArray","useEffect","randomArray","Array","from","Math","round","random","min","generateArray","sortedArray","mergeSort","handleStartAnimation","a","oldArray","onClick","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,4BAA4B,0DAA0D,oCAAoC,oE,oBCA5ID,EAAOC,QAAU,CAAC,2BAA2B,2D,gBCA7CD,EAAOC,QAAU,CAAC,mBAAmB,4C,uECDrCD,EAAOC,QAAU,IAA0B,kC,qMCgB5BC,MAbf,YAA8D,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,MAClD,OACE,yBACEC,UAAS,UAAKC,IAAO,6BAAZ,YACPJ,GAAYI,IAAO,sCAErBC,MAAO,CAAEJ,OAAO,GAAD,OAAKA,EAAL,KAAgBC,MAAM,GAAD,OAAKA,EAAL,OAJtC,SCkBWI,MALf,YAA4D,IAClDC,EAfa,SAACC,EAAOC,EAAQC,GAWnC,OAVsBF,EAAMG,KAAI,SAACC,EAAGC,GAChC,OACI,kBAAC,EAAD,CACIb,SAAUY,EAAEZ,SACZC,OAASW,EAAEE,MAAQJ,EAAMK,IAAO,IAChCb,MAAQ,EAAIO,EAAU,IACtBO,IAAKH,OAQKI,CADiC,EAAhCC,cAAgC,EAAjBT,OAAiB,EAATC,OAE9C,OAAO,yBAAKP,UAAWC,IAAO,qBAAsBG,ICpBjD,SAASY,EAAUX,EAAOY,EAAUC,GACvC,IAAIC,EAAWd,EAAMe,MAAM,GAC3B,GAAIF,GAAYC,EAASE,OAErB,IADA,IAAIC,EAAIJ,EAAWC,EAASE,OAAS,EAC9BC,KACHH,EAASI,UAAKC,GAItB,OADAL,EAASM,OAAOP,EAAU,EAAGC,EAASM,OAAOR,EAAU,GAAG,IACnDE,ECPI,SAASO,EAAKrB,EAAOsB,EAAMC,GACtC,IAAIT,EAAWd,EAAMe,MAAM,GACvBS,EAAQ,GAEZ,GAAIF,EAAOC,EAAO,CACd,IAAME,EAAUC,UAAUH,EAAQD,GAAQ,GAAKA,EAEzCK,EAAYN,EAAKP,EAAUQ,EAAMG,GACvCX,EAAWa,EAAUb,SACrBU,EAAQA,EAAMI,OAAOD,EAAUH,OAC/B,IAAMK,EAAaR,EAAKP,EAAUW,EAAS,EAAGF,GAC9CT,EAAWe,EAAWf,SACtBU,EAAQA,EAAMI,OAAOC,EAAWL,OAChC,IAAMM,EAOd,SAAe9B,EAAOsB,EAAMG,EAAQF,GAChC,IAAIT,EAAWd,EAAMe,MAAM,GACvBS,EAAQ,GAERnB,EAAIiB,EACJS,EAAIN,EAAS,EACL,GAARH,GAAuB,GAAVG,GAAwB,GAATF,GAC5BS,QAAQC,MAEZ,KAAO5B,GAAKoB,GAAUM,GAAKR,GAAO,CAC9B,IAAIW,EAAO,CACPC,SAAU,IAEVrB,EAASiB,GAAGzB,MAAQQ,EAAST,GAAGC,OAChC4B,EAAKC,SAASjB,KAAK,CAAEkB,MAAOL,EAAGlB,SAAUR,IACzC6B,EAAKC,SAASjB,KAAK,CAAEkB,MAAO/B,EAAE,EAAGQ,SAAUR,EAAE,IAC7CS,EAAWH,EAAUG,EAAUiB,EAAG1B,GAClC0B,IACAN,MAIAS,EAAKC,SAASjB,KAAK,CAAEkB,MAAO/B,EAAGQ,SAAUR,IACzC6B,EAAKC,SAASjB,KAAK,CAAEkB,MAAOL,EAAGlB,SAAUkB,KAE7C1B,IACAmB,EAAMN,KAAKgB,GAEf,MAAO,CAAEpB,WAAUU,SAnCIa,CAAMvB,EAAUQ,EAAMG,EAAQF,GACjDT,EAAWgB,EAAWhB,SACtBU,EAAQA,EAAMI,OAAOE,EAAWN,OAEpC,MAAO,CAAEV,WAAUU,SCZvB,IASMc,EAAW,SAAC,EAActC,GAAW,IAAvBmC,EAAsB,EAAtBA,SACZrB,EAAWd,EAAMe,MAAM,GAM3B,OALAoB,EAASI,SAAQ,SAAAC,GACb1B,EAAS0B,EAAQJ,OAAO5C,UAAW,EACnCsB,EAAWH,EAAUG,EAAU0B,EAAQJ,MAAOI,EAAQ3B,aAGnDC,GAGL2B,EAAa,SAAC,EAAWzC,GAAW,IAArBmC,EAAoB,EAApBA,SACbrB,EAAWd,EAAMe,MAAM,GAK3B,OAJAoB,EAASI,SAAQ,SAAAC,GACb1B,EAAS0B,EAAQ3B,UAAUrB,UAAW,KAGnCsB,GAGL4B,EAAQ,SAAAC,GAAE,OAAI,IAAIC,SAAQ,SAAAC,GAAG,OAAIC,WAAWD,EAAKF,OAkDxCI,MAhDf,YAAoD,IAAlB9C,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,MAAS,EAErB8C,mBAAS,IAFY,mBAExChD,EAFwC,KAEjCiD,EAFiC,OAGrBD,mBAAS,IAHY,mBAGxCxB,EAHwC,KAGjC0B,EAHiC,OAITF,mBAAS,CAAEb,SAAU,GAAIgB,UAAU,IAJ1B,mBAI3BC,GAJ2B,aAKXJ,mBAAS,IALE,mBAK5BK,GAL4B,WAO/CC,qBAAU,WACN,IAAMC,EAtCQ,SAACtD,EAAQC,GAC3B,OAAOsD,MAAMC,KAAKD,MAAMvD,IAASE,KAAI,SAAAC,GACjC,MAAO,CACHE,MAAOoD,KAAKC,MAAMD,KAAKE,UAAY1D,EAAMK,IAAML,EAAM2D,KAAO3D,EAAM2D,KAClErE,UAAU,MAkCMsE,CAAc7D,EAAQC,GAC1C+C,EAASM,GAMT,IAAMQ,EAAcC,EAAUT,EAAa,EAAIA,EAAYvC,OAAS,GAEpEqC,EAAcU,EAAYjD,UAC1BoC,EAASa,EAAYvC,SACtB,IAEH,IAAMyC,EAAoB,uCAAG,oCAAAC,EAAA,sDACzBlC,QAAQC,IAAI,SACRkC,EAAWnE,EACfgC,QAAQC,IAAIT,EAAOxB,GAHM,cAINwB,GAJM,gEAIdU,EAJc,QAKrBkB,EAAelB,GACXpB,EAAWwB,EAASJ,EAAMiC,GAC9BlB,EAASnC,GAPY,UASf4B,EAAM,IATS,QAWrB5B,EAAW2B,EAAWP,EAAMpB,GAC5BmC,EAASnC,GACTqD,EAAWrD,EAbU,+IAezBsC,EAAe,CAAEjB,SAAU,GAAIgB,UAAU,IACzCD,EAAS,IAhBgB,gEAAH,qDAmB1B,OACI,yBAAKvD,UAAWC,IAAO,6BACnB,yBAAKwE,QAAS,kBAAMH,MAApB,SACA,kBAAC,EAAD,CAAiBvD,cAAeV,EAAOE,MAAOA,EAAOD,OAAQA,MCnE1DoE,MARf,WACE,OACE,yBAAK1E,UAAU,OACb,kBAAC,EAAD,CAAwBM,OAAQ,IAAKC,MAAO,CAAE2D,IAAK,EAAGtD,IAAK,SCI7C+D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLvD,QAAQuD,MAAMA,EAAMC,c","file":"static/js/main.f9e80f49.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"array-visualizer__element\":\"ArrayVisualizerElement_array-visualizer__element__1tMfY\",\"array-visualizer__element--active\":\"ArrayVisualizerElement_array-visualizer__element--active__2Tpxe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"array-sorting-controller\":\"ArraySortingController_array-sorting-controller__efqOE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"array-visualizer\":\"ArrayVisualizer_array-visualizer__10iCg\"};","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from \"react\";\r\nimport Styles from \"./ArrayVisualizerElement.module.sass\";\r\n\r\nfunction ArrayVisualizerElement({ isActive, height, width }) {\r\n  return (\r\n    <div\r\n      className={`${Styles[\"array-visualizer__element\"]} ${\r\n        isActive && Styles[\"array-visualizer__element--active\"]\r\n      }`}\r\n      style={{ height: `${height}%`, width: `${width}%` }}\r\n    >\r\n      &nbsp;\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ArrayVisualizerElement;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Styles from \"./ArrayVisualizer.module.sass\";\r\nimport ArrayVisualizerElement from \"../ArrayVisualizerElement/ArrayVisualizerElement\";\r\n\r\nconst createElements = (array, lenght, range) => {\r\n    const arrayElements = array.map((e, i) => {\r\n        return (\r\n            <ArrayVisualizerElement\r\n                isActive={e.isActive}\r\n                height={(e.value / range.max) * 100}\r\n                width={(1 / lenght) * 100}\r\n                key={i}\r\n            />\r\n        );\r\n    });\r\n    return arrayElements;\r\n};\r\n\r\nfunction ArrayVisualizer({ startingArray, lenght, range }) {\r\n    const arrayElements = createElements(startingArray, lenght, range);\r\n    return <div className={Styles[\"array-visualizer\"]}>{arrayElements}</div>;\r\n}\r\n\r\nexport default ArrayVisualizer;\r\n","export function arrayMove(array, oldIndex, newIndex) {\r\n    var newArray = array.slice(0);      // prevents pass by reference\r\n    if (newIndex >= newArray.length) {\r\n        var k = newIndex - newArray.length + 1;\r\n        while (k--) {\r\n            newArray.push(undefined);\r\n        }\r\n    }\r\n    newArray.splice(newIndex, 0, newArray.splice(oldIndex, 1)[0]);\r\n    return newArray;\r\n};","import { arrayMove } from '../ArrayUtil/ArrayUtil';\r\n\r\nexport default function sort(array, left, right) {\r\n    var newArray = array.slice(0);      // prevents pass by reference\r\n    var steps = [];\r\n\r\n    if (left < right) {\r\n        const middle = (parseInt((right - left) / 2) + left);\r\n\r\n        const leftArray = sort(newArray, left, middle);\r\n        newArray = leftArray.newArray;\r\n        steps = steps.concat(leftArray.steps);\r\n        const rightArray = sort(newArray, middle + 1, right);\r\n        newArray = rightArray.newArray;\r\n        steps = steps.concat(rightArray.steps);\r\n        const mergedInfo = merge(newArray, left, middle, right);\r\n        newArray = mergedInfo.newArray\r\n        steps = steps.concat(mergedInfo.steps);\r\n    }\r\n    return { newArray, steps };\r\n}\r\n\r\nfunction merge(array, left, middle, right) {\r\n    var newArray = array.slice(0);      // prevents pass by reference\r\n    var steps = [];\r\n\r\n    var i = left;\r\n    var j = middle + 1;\r\n    if (left == 0 && middle == 4 && right == 9) {\r\n        console.log();\r\n    }\r\n    while (i <= middle && j <= right) {\r\n        var step = {\r\n            elements: []\r\n        }\r\n        if (newArray[j].value < newArray[i].value) {\r\n            step.elements.push({ index: j, newIndex: i });\r\n            step.elements.push({ index: i+1, newIndex: i+1 });\r\n            newArray = arrayMove(newArray, j, i);\r\n            j++\r\n            middle++;\r\n        }\r\n        else\r\n        {\r\n            step.elements.push({ index: i, newIndex: i });\r\n            step.elements.push({ index: j, newIndex: j });\r\n        }\r\n        i++;\r\n        steps.push(step);\r\n    }\r\n    return { newArray, steps };\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Styles from './ArraySortingController.module.sass';\r\nimport ArrayVisualizer from '../ArrayVisualizer/ArrayVisualizer';\r\nimport bubbleSort from '../../Utilities/SortingUtil/BubbleSort';\r\nimport mergeSort from '../../Utilities/SortingUtil/MergeSort';\r\nimport { arrayMove } from '../../Utilities/ArrayUtil/ArrayUtil';\r\n\r\nconst generateArray = (lenght, range) => {\r\n    return Array.from(Array(lenght)).map(e => {\r\n        return {\r\n            value: Math.round(Math.random() * (range.max - range.min) + range.min),\r\n            isActive: false\r\n        }\r\n    });\r\n}\r\n\r\nconst nextStep = ({ elements }, array) => {\r\n    var newArray = array.slice(0);\r\n    elements.forEach(element => {\r\n        newArray[element.index].isActive = true\r\n        newArray = arrayMove(newArray, element.index, element.newIndex);\r\n    });\r\n\r\n    return newArray;\r\n}\r\n\r\nconst deactivate = ({elements},array) => {\r\n    var newArray = array.slice(0);\r\n    elements.forEach(element => {\r\n        newArray[element.newIndex].isActive = false\r\n    });\r\n\r\n    return newArray;\r\n}\r\n\r\nconst delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\nfunction ArraySortingController({ lenght, range }) {\r\n\r\n    const [array, setArray] = useState([]);\r\n    const [steps, setSteps] = useState([]);\r\n    const [currentStep, setCurrentStep] = useState({ elements: [], isChange: false });\r\n    const [finalArray, setFinalArray] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const randomArray = generateArray(lenght, range);\r\n        setArray(randomArray);\r\n        // console.log(\"array\", randomArray);\r\n        // const merge = mergeSort(randomArray, 0, (randomArray.length - 1));\r\n        // const sort = randomArray.sort((a, b) => a - b)\r\n        // console.log(\"merge\", merge);\r\n\r\n        const sortedArray = mergeSort(randomArray, 0, (randomArray.length - 1));\r\n        // const sortedArray = bubbleSort(randomArray);\r\n        setFinalArray(sortedArray.newArray);\r\n        setSteps(sortedArray.steps);\r\n    }, []);\r\n\r\n    const handleStartAnimation = async () => {\r\n        console.log(\"start\");\r\n        var oldArray = array;\r\n        console.log(steps, array);\r\n        for (const step of steps) {\r\n            setCurrentStep(step);\r\n            var newArray = nextStep(step, oldArray)\r\n            setArray(newArray);\r\n\r\n            await delay(10);\r\n\r\n            newArray = deactivate(step, newArray);\r\n            setArray(newArray)\r\n            oldArray = newArray;\r\n        }\r\n        setCurrentStep({ elements: [], isChange: false });\r\n        setSteps([]);\r\n    }\r\n\r\n    return (\r\n        <div className={Styles['array-sorting-controller']}>\r\n            <div onClick={() => handleStartAnimation()}>start</div>\r\n            <ArrayVisualizer startingArray={array} range={range} lenght={lenght} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ArraySortingController;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport ArraySortingController from './Components/ArraySortingController/ArraySortingController';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ArraySortingController lenght={100} range={{ min: 5, max: 1000 }} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}